library(PWord)
unigramFreq[1,1]
library(PWord)
library(PWord)
unigramFreq[1,1]
unigramFreq[1,2]
trigramFreq[1,1]
bigramFreq[1,1]
trigramFreq[1,2]
bigramFreq[1,2]
bigramFreq[1,1]
library(PredictWord)
unigramFreq[1,1]
unigramFreq[1:10,1]
remove.packages(PWord)
remove.packages('PWord')
remove.packages('PWord',"")
remove.packages('PWord','')
library(PredictWord)
unigramFreq[1:10,1]
trigramFreq[1:10,1]
library(PredictWord)
p <- filter(triGram,( word1 == inputWord1 & word2 == inputWord2))$word3
p <- filter(triGram,( uword == "how" & bword == "are"))$tword
p <- filter(triGram,(triGram$uword == "how" & triGram$bword == "are"))$tword
p <- head(triGram$uword == "how" & triGram$bword == "are")
p
p <- head(triGram$bword == "how")
p
p <- head(triGram$bword == "are")
p
xx
library(tidyr)
xx<-separate(trigramFreq,word,c("uword","bword","tword"),sep=" ")
head(xx)
xx<-strsplit(trigramFreq$word," ")
xx<-strsplit(trigramFreq[1]," ")
xx<-strsplit(trigramFreq[[1]]," ")
xx<-strsplit(as.character(trigramFreq$word)," ")
head(xx)
head(x)[[1]]
head(xx)[[1]]
head(xx)[1]
head(xx)[,1]
head(xx)[1,]
head(xx[1,])
head(xx[,1])
head(xx)
head(xx)
xx<-separate(bigramFreq,word,c("uword","bword"),sep=" "))
xx<-separate(bigramFreq,word,c("uword","bword"),sep=" ")
xx<-strsplit(as.character(trigramFreq$word)," ")
xy<-separate(bigramFreq,word,c("uword","bword"),sep=" ")
head(xx)
head(xy)
head(xy)[1]
head(xy)[2]
head(xy)[[1]]
head(xy[2])
head(xy[2]=="now")
head(triGram[2]=="how")
head(triGram[3]=="how")
head(triGram[4]=="how")
head(biGram[2]=="how")
head(biGram[3]=="how")
head(quadGram[4]=="how")
head(biGram[2]=="now")
head(biGram[3]=="now")
if(head(biGram[3]=="now",1)==TRUE){biGram[3]}
head(biGram[biGram[3] == "now", 3],1)
head(biGram[biGram[3] == "now", 2],1)
p<-"hello how"
p<-str_replace_all(p, "[^[:alnum:]]", " ")
p<-stri_replace_all(p, "[^[:alnum:]]", " ")
library(stringi)
p<-str_replace_all(p, "[^[:alnum:]]", " ")
install.packages("stylo")
library(stylo)
txt.to.words.ext("hello how",language = "English.all",preserve.case = TRUE)
X<-txt.to.words.ext("hello how",language = "English.all",preserve.case = TRUE)
X[1]
X[2]
X
XL<-length(X)
X<-"how are you doing"
XL<-length(X)
X[(XL-2):XL]
X<-"how are you doing"
X<-txt.to.words.ext(X,language = "English.all",preserve.case = TRUE)
X
XL<-length(X)
X[(XL-2):XL]
X[1:2]
X[2:2]
X[2:4]
Y<-X[2:4]
Y
head(quadGram[quadGram[2]==Y[1]&quadGram[3]==Y[2],quadGram[4]==Y[3],5],1)
Z<-head(quadGram[quadGram[2]==Y[1]&quadGram[3]==Y[2],quadGram[4]==Y[3],5],1)
length(Z)
shiny::runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
mGram <- function("new","york")
{
predictWord <- head(triGram[triGram[2]==iWord2,triGram[3]==iWord3,4],1)
if(length(predictWord)==0)
{
predictWord <- head(triGram[triGram[3]==iWord3,4],1)
if(length(predictWord)== 0)
{
predictWord <- head(triGram[triGram[2]==iWord3,3],1)
if(length(predictWord) ==0 )
{
predictWord <- matchBiGram(iWord3)
}
}
}
predictWord
}
mGram <- function("new","york")
{
predictWord <- head(triGram[triGram[2]=="new",triGram[3]=="york",4],1)
if(length(predictWord)==0)
{
predictWord <- head(triGram[triGram[3]=="york",4],1)
if(length(predictWord)== 0)
{
predictWord <- head(triGram[triGram[2]=="york",3],1)
if(length(predictWord) ==0 )
{
predictWord <- length(predictWord)
}
}
}
predictWord
}
library(PredictWord)
mGram <- function("new","york")
{
predictWord <- head(triGram[triGram[2]=="new",triGram[3]=="york",4],1)
if(length(predictWord)==0)
{
predictWord <- head(triGram[triGram[3]=="york",4],1)
if(length(predictWord)== 0)
{
predictWord <- head(triGram[triGram[2]=="york",3],1)
if(length(predictWord) ==0 )
{
predictWord <- length(predictWord)
}
}
}
predictWord
}
library(PredictWord)
mGram <- function("new","york")
{
predictWord <- head(triGram[triGram[2]=="new",triGram[3]=="york",4],1)
if(length(predictWord)==0)
{
predictWord <- head(triGram[triGram[3]=="york",4],1)
if(length(predictWord)== 0)
{
predictWord <- head(triGram[triGram[2]=="york",3],1)
if(length(predictWord) ==0 )
{
predictWord <- length(predictWord)
}
}
}
predictWord
}
library(PredictWord)
mGram <- function(iWord2="new",iWord3="york")
{
predictWord <- head(triGram[triGram[2]==iWord2,triGram[3]==iWord3,4],1)
if(length(predictWord)==0)
{
predictWord <- head(triGram[triGram[3]==iWord3,4],1)
if(length(predictWord)== 0)
{
predictWord <- head(triGram[triGram[2]==iWord3,3],1)
if(length(predictWord) ==0 )
{
predictWord <- length(predictWord)
}
}
}
predictWord
}
mGram("new","york")
mGram
library(PredictWord)
function(iWord2="new",iWord3="york")
{
predictWord <- head(triGram[triGram[2]==iWord2,triGram[3]==iWord3,4],1)
if(length(predictWord)==0)
{
predictWord <- head(triGram[triGram[3]==iWord3,4],1)
if(length(predictWord)== 0)
{
predictWord <- head(triGram[triGram[2]==iWord3,3],1)
if(length(predictWord) ==0 )
{
predictWord <- length(predictWord)
}
}
}
return(predictWord)
}
library(PredictWord)
function(iWord2="new",iWord3="york")
{
predictWord <- head(triGram[triGram[2]==iWord2,triGram[3]==iWord3,4],1)
if(length(predictWord)==0)
{
predictWord <- head(triGram[triGram[3]==iWord3,4],1)
if(length(predictWord)== 0)
{
predictWord <- head(triGram[triGram[2]==iWord3,3],1)
if(length(predictWord) ==0 )
{
predictWord <- length(predictWord)
}
}
}
return(predictWord)
}
predictWord <- head(triGram[triGram[2]=="new",triGram[3]=="york",4],1)
head(triGram[2])
predictWord <- head(triGram[triGram[2]==new,triGram[3]==york,4],1)
predictWord <- head(triGram[triGram[2]=='new',triGram[3]=='york',4],1)
predictWord <- head(triGram[triGram[2]=="new",triGram[3]=="york",4],1)
xs<-"new york"
xs<-strsplit(xs," ")
xs
xs[1]
xs[2]
aa<-strsplit("hello are"," ")
aa
aa[1]
aa[2]
aa<-"hello are"
aa<-strsplit(aa," ")
aa
aa[1]
aa<-txt.to.words.ext(aa, language="English.all", preserve.case = TRUE)
aa
ab<-"hello are"
ab<-txt.to.words.ext(ab, language="English.all", preserve.case = TRUE)
ab
ab[1]
ab[2]
aa<-"hello are"
aa<-strsplit(aa," ")[[1]]
aa
aa[1]
aa[2]
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
install.packages("shinythemes")
shiny::runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
runApp('C:/Users/vmuttine/Desktop/R Programming/Data Science Capstone/Data_Science_Capstone_Predict_Word')
